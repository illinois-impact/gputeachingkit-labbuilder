package pandoc

import (
	"github.com/GeertJohan/go.rice/embedded"
	"time"
)

func init() {

	// define files
	filew := &embedded.EmbeddedFile{
		Filename:    `ccicons.sty`,
		FileModTime: time.Unix(1497965809, 0),
		Content:     string("%%\n%% This is file `ccicons.sty',\n%% generated with the docstrip utility.\n%%\n%% The original source files were:\n%%\n%% ccicons.dtx  (with options: `package')\n%% \n%% This is a generated file.\n%% \n%% Copyright (C) 2013 by Michael Ummels <michael.ummels@rwth-aachen.de>\n%% \n%% This work may be distributed and/or modified under the\n%% conditions of the LaTeX Project Public License, either version 1.3c\n%% of this license or (at your option) any later version.\n%% The latest version of this license is in\n%%   http://www.latex-project.org/lppl.txt\n%% and version 1.3 or later is part of all distributions of LaTeX\n%% version 2005/12/01 or later.\n%% \n%% This work has the LPPL maintenance status `maintained'.\n%% \n%% The Current Maintainer of this work is Michael Ummels.\n%% \n%% This work consists of the files ccicons.dtx, ccicons.ins\n%% and the derived files ccicons.pdf and ccicons.sty.\n%% \n\\NeedsTeXFormat{LaTeX2e}[1999/12/01]\n\\ProvidesPackage{ccicons}[2013/04/16 v1.5 LaTeX support for Creative Commons icons]\n\\RequirePackage{xkeyval}\n\\define@boolkey{ccicons.sty}[ccicons@]{copyright}[true]{}\n\\newcommand{\\ccicons@scale}{1.0}\n\\define@key{ccicons.sty}{scale}{\\renewcommand\\ccicons@scale{#1}}\n\\ProcessOptionsX\n\\DeclareFontFamily{U}{ccicons}{}\n\\DeclareFontShape{U}{ccicons}{m}{n}{\n   <-> s * [\\ccicons@scale] ccicons\n}{}\n\\newcommand{\\ccicons@font}{\\usefont{U}{ccicons}{m}{n}}\n\\newcommand{\\ccicons@logo}{\\char0}\n\\newcommand{\\ccicons@by}{\\char1}\n\\newcommand{\\ccicons@sa}{\\char2}\n\\newcommand{\\ccicons@nd}{\\char3}\n\\newcommand{\\ccicons@nc}{\\char4}\n\\newcommand{\\ccicons@nceu}{\\char5}\n\\newcommand{\\ccicons@ncjp}{\\char6}\n\\newcommand{\\ccicons@pd}{\\char7}\n\\newcommand{\\ccicons@zero}{\\char8}\n\\newcommand{\\ccicons@sampling}{\\char9}\n\\newcommand{\\ccicons@share}{\\char10}\n\\newcommand{\\ccicons@remix}{\\char11}\n\\newcommand{\\ccicons@copy}{\\char12}\n\\newcommand{\\ccLogo}{{\\ccicons@font\\ccicons@logo}}\n\\newcommand{\\ccAttribution}{{\\ccicons@font\\ccicons@by}}\n\\newcommand{\\ccShareAlike}{{\\ccicons@font\\ccicons@sa}}\n\\newcommand{\\ccNoDerivatives}{{\\ccicons@font\\ccicons@nd}}\n\\newcommand{\\ccNonCommercial}{{\\ccicons@font\\ccicons@nc}}\n\\newcommand{\\ccNonCommercialEU}{{\\ccicons@font\\ccicons@nceu}}\n\\newcommand{\\ccNonCommercialJP}{{\\ccicons@font\\ccicons@ncjp}}\n\\newcommand{\\ccPublicDomain}{{\\ccicons@font\\ccicons@pd}}\n\\newcommand{\\ccZero}{{\\ccicons@font\\ccicons@zero}}\n\\newcommand{\\ccSampling}{{\\ccicons@font\\ccicons@sampling}}\n\\newcommand{\\ccShare}{{\\ccicons@font\\ccicons@share}}\n\\newcommand{\\ccRemix}{{\\ccicons@font\\ccicons@remix}}\n\\newcommand{\\ccCopy}{{\\ccicons@font\\ccicons@copy}}\n\\ifccicons@copyright\\renewcommand{\\textcopyright}{\\ccCopy}\\fi\n\\newcommand{\\ccby}%\n  {\\mbox{\\ccicons@font\\ccicons@logo\\kern0.1em\\ccicons@by}}\n\\newcommand{\\ccbysa}%\n  {\\mbox{\\ccicons@font\\ccicons@logo\\kern0.1em\\ccicons@by%\n  \\kern0.1em\\ccicons@sa}}\n\\newcommand{\\ccbynd}%\n  {\\mbox{\\ccicons@font\\ccicons@logo\\kern0.1em\\ccicons@by%\n  \\kern0.1em\\ccicons@nd}}\n\\newcommand{\\ccbync}%\n  {\\mbox{\\ccicons@font\\ccicons@logo\\kern0.1em\\ccicons@by%\n  \\kern0.1em\\ccicons@nc}}\n\\newcommand{\\ccbynceu}%\n  {\\mbox{\\ccicons@font\\ccicons@logo\\kern0.1em\\ccicons@by%\n  \\kern0.1em\\ccicons@nceu}}\n\\newcommand{\\ccbyncjp}%\n  {\\mbox{\\ccicons@font\\ccicons@logo\\kern0.1em\\ccicons@by%\n  \\kern0.1em\\ccicons@ncjp}}\n\\newcommand{\\ccbyncsa}%\n  {\\mbox{\\ccicons@font\\ccicons@logo\\kern0.1em\\ccicons@by%\n  \\kern0.1em\\ccicons@nc\\kern0.1em\\ccicons@sa}}\n\\newcommand{\\ccbyncsaeu}%\n  {\\mbox{\\ccicons@font\\ccicons@logo\\kern0.1em\\ccicons@by%\n  \\kern0.1em\\ccicons@nceu\\kern0.1em\\ccicons@sa}}\n\\newcommand{\\ccbyncsajp}%\n  {\\mbox{\\ccicons@font\\ccicons@logo\\kern0.1em\\ccicons@by%\n  \\kern0.1em\\ccicons@ncjp\\kern0.1em\\ccicons@sa}}\n\\newcommand{\\ccbyncnd}%\n  {\\mbox{\\ccicons@font\\ccicons@logo\\kern0.1em\\ccicons@by%\n  \\kern0.1em\\ccicons@nc\\kern0.1em\\ccicons@nd}}\n\\newcommand{\\ccbyncndeu}%\n  {\\mbox{\\ccicons@font\\ccicons@logo\\kern0.1em\\ccicons@by%\n  \\kern0.1em\\ccicons@nceu\\kern0.1em\\ccicons@nd}}\n\\newcommand{\\ccbyncndjp}%\n  {\\mbox{\\ccicons@font\\ccicons@logo\\kern0.1em\\ccicons@by%\n  \\kern0.1em\\ccicons@ncjp\\kern0.1em\\ccicons@nd}}\n\\newcommand{\\cczero}%\n  {\\mbox{\\ccicons@font\\ccicons@logo\\kern0.1em\\ccicons@zero}}\n\\newcommand{\\ccpd}%\n  {\\mbox{\\ccicons@font\\ccicons@logo\\kern0.1em\\ccicons@pd}}\n%% \n%%\n%% End of file `ccicons.sty'.\n"),
	}
	filex := &embedded.EmbeddedFile{
		Filename:    `structure.tex`,
		FileModTime: time.Unix(1497965809, 0),
		Content:     string("%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n% Arsclassica Article\n% Structure Specification File\n%\n% This file has been downloaded from:\n% http://www.LaTeXTemplates.com\n%\n% Original author:\n% Lorenzo Pantieri (http://www.lorenzopantieri.net) with extensive modifications by:\n% Vel (vel@latextemplates.com)\n%\n% License:\n% CC BY-NC-SA 3.0 (http://creativecommons.org/licenses/by-nc-sa/3.0/)\n%\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\n%----------------------------------------------------------------------------------------\n%\tREQUIRED PACKAGES\n%----------------------------------------------------------------------------------------\n\n\\usepackage[\nnochapters, % Turn off chapters since this is an article        \nberamono, % Use the Bera Mono font for monospaced text (\\texttt)\neulermath,% Use the Euler font for mathematics\npdfspacing, % Makes use of pdftex’ letter spacing capabilities via the microtype package\ndottedtoc % Dotted lines leading to the page numbers in the table of contents\n]{classicthesis} % The layout is based on the Classic Thesis style\n\n\\usepackage{arsclassica} % Modifies the Classic Thesis package\n\n\\usepackage[T1]{fontenc} % Use 8-bit encoding that has 256 glyphs\n\n\\usepackage[utf8]{inputenc} % Required for including letters with accents\n\n\\usepackage{graphicx} % Required for including images\n\\graphicspath{{Figures/}} % Set the default folder for images\n\n\\usepackage{enumitem} % Required for manipulating the whitespace between and within lists\n\n\\usepackage{lipsum} % Used for inserting dummy 'Lorem ipsum' text into the template\n\n\\usepackage{subfig} % Required for creating figures with multiple parts (subfigures)\n\n\\usepackage{amsmath,amssymb,amsthm} % For including math equations, theorems, symbols, etc\n\n\\usepackage{varioref} % More descriptive referencing\n\n%----------------------------------------------------------------------------------------\n%\tTHEOREM STYLES\n%---------------------------------------------------------------------------------------\n\n\\theoremstyle{definition} % Define theorem styles here based on the definition style (used for definitions and examples)\n\\newtheorem{definition}{Definition}\n\n\\theoremstyle{plain} % Define theorem styles here based on the plain style (used for theorems, lemmas, propositions)\n\\newtheorem{theorem}{Theorem}\n\n\\theoremstyle{remark} % Define theorem styles here based on the remark style (used for remarks and notes)\n\n"),
	}
	filey := &embedded.EmbeddedFile{
		Filename:    `template.tex`,
		FileModTime: time.Unix(1497965809, 0),
		Content:     string("\\documentclass[\n10pt, % Main document font size\nletterpaper, % Paper type, use 'letterpaper' for US Letter paper\noneside, % One page layout (no page indentation)\n%twoside, % Two page layout (page indentation for binding and different headers)\nheadinclude,footinclude, % Extra spacing for the header and footer\nBCOR5mm, % Binding correction\n]{scrartcl}\n\\input{structure.tex} % Include the structure.tex file which specified the document structure and layout\n\n\\usepackage{listings}\n\\usepackage{xcolor}\n\\usepackage{color}\n\\usepackage{hyperref}\n\\definecolor{mygray}{rgb}{0.4,0.4,0.4}\n\\definecolor{mygreen}{rgb}{0,0.8,0.6}\n\\definecolor{myorange}{rgb}{1.0,0.4,0}\n\n\\lstset{language=C++,\n       basicstyle=\\ttfamily\\scriptsize,\n       keywordstyle=\\color{blue}\\ttfamily,\n       stringstyle=\\color{red}\\ttfamily,\n       commentstyle=\\color{green}\\ttfamily,\n       numbers=left,\n       numbersep=5pt,\n       numberstyle=\\tiny\\color{mygray},\n       breaklines=true\n      }\n\n\\newcommand{\\fix}[1]{\\texttt{\\small #1}}\n\n\\hyphenation{Fortran hy-phen-ation} % Specify custom hyphenation points in words with dashes where you would like hyphenation to occur, or alternatively, don't put any dashes in a word to stop hyphenation altogether\n\n$if(linestretch)$\n\\usepackage{setspace}\n\\setstretch{$linestretch$}\n$endif$\n\\usepackage{amssymb,amsmath}\n\\usepackage{ifxetex,ifluatex}\n\\usepackage{fixltx2e} % provides \\textsubscript\n\\ifnum 0\\ifxetex 1\\fi\\ifluatex 1\\fi=0 % if pdftex\n  \\usepackage[T1]{fontenc}\n  \\usepackage[utf8]{inputenc}\n$if(euro)$\n  \\usepackage{eurosym}\n$endif$\n\\else % if luatex or xelatex\n  \\ifxetex\n    \\usepackage{mathspec}\n    \\usepackage{xltxtra,xunicode}\n  \\else\n    \\usepackage{fontspec}\n  \\fi\n  \\defaultfontfeatures{Mapping=tex-text,Scale=MatchLowercase}\n  \\newcommand{\\euro}{€}\n$if(mainfont)$\n    \\setmainfont{$mainfont$}\n$endif$\n$if(sansfont)$\n    \\setsansfont{$sansfont$}\n$endif$\n$if(monofont)$\n    \\setmonofont[Mapping=tex-ansi]{$monofont$}\n$endif$\n$if(mathfont)$\n    \\setmathfont(Digits,Latin,Greek){$mathfont$}\n$endif$\n$if(CJKmainfont)$\n    \\usepackage{xeCJK}\n    \\setCJKmainfont[$CJKoptions$]{$CJKmainfont$}\n$endif$\n\\fi\n% use upquote if available, for straight quotes in verbatim environments\n\\IfFileExists{upquote.sty}{\\usepackage{upquote}}{}\n% use microtype if available\n\\IfFileExists{microtype.sty}{%\n\\usepackage{microtype}\n\\UseMicrotypeSet[protrusion]{basicmath} % disable protrusion for tt fonts\n}{}\n$if(geometry)$\n\\usepackage[$for(geometry)$$geometry$$sep$,$endfor$]{geometry}\n$endif$\n\\ifxetex\n  \\usepackage[setpagesize=false, % page size defined by xetex\n              unicode=false, % unicode breaks when used with xetex\n              xetex]{hyperref}\n\\else\n  \\usepackage{hyperref}\n\\fi\n\\usepackage{color}\n\\hypersetup{breaklinks=true,\n            bookmarks=true,\n            pdfauthor={$author-meta$},\n            pdftitle={$title-meta$},\n            colorlinks=true,\n            citecolor=$if(citecolor)$$citecolor$$else$blue$endif$,\n            urlcolor=$if(urlcolor)$$urlcolor$$else$blue$endif$,\n            linkcolor=$if(linkcolor)$$linkcolor$$else$magenta$endif$,\n            pdfborder={0 0 0}}\n\\urlstyle{same}  % don't use monospace font for urls\n$if(lang)$\n\\ifxetex\n  \\usepackage{polyglossia}\n  \\setmainlanguage{$mainlang$}\n  \\setotherlanguages{$for(otherlang)$$otherlang$$sep$,$endfor$}\n\\else\n  \\usepackage[shorthands=off,$lang$]{babel}\n\\fi\n$endif$\n$if(natbib)$\n\\usepackage{natbib}\n\\bibliographystyle{$if(biblio-style)$$biblio-style$$else$plainnat$endif$}\n$endif$\n$if(biblatex)$\n\\usepackage{biblatex}\n$for(bibliography)$\n\\addbibresource{$bibliography$}\n$endfor$\n$endif$\n$if(listings)$\n\\usepackage{listings}\n$endif$\n$if(lhs)$\n\\lstnewenvironment{code}{\\lstset{language=Haskell,basicstyle=\\small\\ttfamily}}{}\n$endif$\n$if(highlighting-macros)$\n$highlighting-macros$\n$endif$\n$if(verbatim-in-note)$\n\\usepackage{fancyvrb}\n\\VerbatimFootnotes\n$endif$\n$if(tables)$\n\\usepackage{longtable,booktabs}\n$endif$\n$if(graphics)$\n\\usepackage{graphicx,grffile}\n\\makeatletter\n\\def\\maxwidth{\\ifdim\\Gin@nat@width>\\linewidth\\linewidth\\else\\Gin@nat@width\\fi}\n\\def\\maxheight{\\ifdim\\Gin@nat@height>\\textheight\\textheight\\else\\Gin@nat@height\\fi}\n\\makeatother\n% Scale images if necessary, so that they will not overflow the page\n% margins by default, and it is still possible to overwrite the defaults\n% using explicit options in \\includegraphics[width, height, ...]{}\n\\setkeys{Gin}{width=\\maxwidth,height=\\maxheight,keepaspectratio}\n$endif$\n$if(links-as-notes)$\n% Make links footnotes instead of hotlinks:\n\\renewcommand{\\href}[2]{#2\\footnote{\\url{#1}}}\n$endif$\n$if(strikeout)$\n\\usepackage[normalem]{ulem}\n% avoid problems with \\sout in headers with hyperref:\n\\pdfstringdefDisableCommands{\\renewcommand{\\sout}{}}\n$endif$\n\\setlength{\\parindent}{0pt}\n\\setlength{\\parskip}{6pt plus 2pt minus 1pt}\n\\setlength{\\emergencystretch}{3em}  % prevent overfull lines\n\\providecommand{\\tightlist}{%\n  \\setlength{\\itemsep}{0pt}\\setlength{\\parskip}{0pt}}\n\\setcounter{secnumdepth}{0}\n$if(verbatim-in-note)$\n\\VerbatimFootnotes % allows verbatim text in footnotes\n$endif$\n\n\\DeclareOldFontCommand{\\rm}{\\normalfont\\rmfamily}{\\mathrm}\n\\DeclareOldFontCommand{\\sf}{\\normalfont\\sffamily}{\\mathsf}\n\\DeclareOldFontCommand{\\tt}{\\normalfont\\ttfamily}{\\mathtt}\n\\DeclareOldFontCommand{\\bf}{\\normalfont\\bfseries}{\\mathbf}\n\\DeclareOldFontCommand{\\it}{\\normalfont\\itshape}{\\mathit}\n\\DeclareOldFontCommand{\\sl}{\\normalfont\\slshape}{\\@nomath\\sl}\n\\DeclareOldFontCommand{\\sc}{\\normalfont\\scshape}{\\@nomath\\sc}\n\n$if(title)$\n\\title{$if(module)${Module $module$ Lab}\\\\\\vspace{0.5em}$endif$ {\\bf $title$}}\n$endif$\n$if(author)$\n\\author{\\small \\it $for(author)$$author$$sep$ \\and $endfor$}\n$endif$\n\\date{$date$}\n$for(header-includes)$\n$header-includes$\n$endfor$\n\n% Redefines (sub)paragraphs to behave more like sections\n\\ifx\\paragraph\\undefined\\else\n\\let\\oldparagraph\\paragraph\n\\renewcommand{\\paragraph}[1]{\\oldparagraph{#1}\\mbox{}}\n\\fi\n\\ifx\\subparagraph\\undefined\\else\n\\let\\oldsubparagraph\\subparagraph\n\\renewcommand{\\subparagraph}[1]{\\oldsubparagraph{#1}\\mbox{}}\n\\fi\n\n\\usepackage{ccicons}\n\n\\begin{document}\n\n$if(title)$\n\\maketitle\n$endif$\n$if(abstract)$\n\\begin{abstract}\n$abstract$\n\\end{abstract}\n$endif$\n\n$for(include-before)$\n$include-before$\n\n$endfor$\n$if(toc)$\n{\n\\hypersetup{linkcolor=$if(toccolor)$$toccolor$$else$black$endif$}\n\\setcounter{tocdepth}{$toc-depth$}\n\\tableofcontents\n}\n$endif$\n$if(lot)$\n\\listoftables\n$endif$\n$if(lof)$\n\\listoffigures\n$endif$\n$body$\n\n$if(natbib)$\n$if(bibliography)$\n$if(biblio-title)$\n$if(book-class)$\n\\renewcommand\\bibname{$biblio-title$}\n$else$\n\\renewcommand\\refname{$biblio-title$}\n$endif$\n$endif$\n\\bibliography{$for(bibliography)$$bibliography$$sep$,$endfor$}\n\n$endif$\n$endif$\n$if(biblatex)$\n\\printbibliography$if(biblio-title)$[title=$biblio-title$]$endif$\n\n$endif$\n$for(include-after)$\n$include-after$\n\n$endfor$\n\n\n\\noindent\\makebox[\\linewidth]{\\rule{\\paperwidth}{0.4pt}}\n\n\\vspace{1cm}\n\\begin{center}\n{\\small\n\\ccbync This work is licensed by UIUC and NVIDIA (2016) under\na \\href{http://creativecommons.org/licenses/by-nc/4.0/}{Creative Commons Attribution-NonCommercial 4.0 License.}\n}\n\n\\end{center}\n\\end{document}\n"),
	}

	// define dirs
	dirv := &embedded.EmbeddedDir{
		Filename:   ``,
		DirModTime: time.Unix(1497965809, 0),
		ChildFiles: []*embedded.EmbeddedFile{
			filew, // ccicons.sty
			filex, // structure.tex
			filey, // template.tex

		},
	}

	// link ChildDirs
	dirv.ChildDirs = []*embedded.EmbeddedDir{}

	// register embeddedBox
	embedded.RegisterEmbeddedBox(`../_fixtures/templates/latex`, &embedded.EmbeddedBox{
		Name: `../_fixtures/templates/latex`,
		Time: time.Unix(1497965809, 0),
		Dirs: map[string]*embedded.EmbeddedDir{
			"": dirv,
		},
		Files: map[string]*embedded.EmbeddedFile{
			"ccicons.sty":   filew,
			"structure.tex": filex,
			"template.tex":  filey,
		},
	})
}
